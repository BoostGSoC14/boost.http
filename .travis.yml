sudo: required
dist: trusty
notifications:
  on_success: change
  on_failure: always
  on_start: false

matrix:
  include:
    - os: linux
      env: CC=gcc-4.9 CXX=g++-4.9 BUILD_TYPE=Debug
      addons: &gcc49
        apt:
          packages:
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

    - os: linux
      env: CC=gcc-4.9 CXX=g++-4.9 BUILD_TYPE=Release
      addons: &gcc49
        apt:
          packages:
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

    - os: linux
      env: CC=gcc-5 CXX=g++-5 BUILD_TYPE=Debug
      addons: &gcc5
        apt:
          packages:
            - g++-5
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      env: CC=gcc-5 CXX=g++-5 BUILD_TYPE=Release
      addons: &gcc5
        apt:
          packages:
            - g++-5
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      env: CC=clang-3.5 CXX=clang++-3.5 BUILD_TYPE=Debug
      addons: &clang35
        apt:
          packages:
            - clang-3.5
          sources:
            - llvm-toolchain-precise-3.5
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

    - os: linux
      env: CC=clang-3.5 CXX=clang++-3.5 BUILD_TYPE=Release
      addons: &clang35
        apt:
          packages:
            - clang-3.5
          sources:
            - llvm-toolchain-precise-3.5
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

    - os: osx
      env: CMAKE_COMPILER=clang++

before_install:
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -qq realpath; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then wget https://github.com/ned14/boost-release/archive/master.zip; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then unzip -q master.zip; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then export BOOST_ROOT="$(realpath boost-release-master)"; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then pushd "${BOOST_ROOT}"; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then chmod +x bootstrap.sh; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then ./bootstrap.sh --with-libraries=container,context,coroutine,date_time,filesystem,system,test; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then ./b2; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then popd; fi
 - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; fi
 - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew upgrade boost cmake; fi

script:
  - mkdir build && cd build
  - cmake -DBUILD_SHARED_LIBS=YES -DBoost_NO_SYSTEM_PATHS=ON -DBOOST_ROOT="${BOOST_ROOT}" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_EXAMPLES=OFF -DBUILD_TESTS=ON ..
  - export CTEST_OUTPUT_ON_FAILURE=TRUE
  - make && ctest
