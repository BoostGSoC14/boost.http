sudo: required
dist: trusty
notifications:
  on_success: change
  on_failure: always
  on_start: false

matrix:
  include:
    - os: osx
      env: CMAKE_COMPILER=clang++

    - os: linux
      env: CC=gcc-4.9 CXX=g++-4.9 BUILD_TYPE=Debug
      addons: &gcc49
        apt:
          packages:
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

    - os: linux
      env: CC=gcc-4.9 CXX=g++-4.9 BUILD_TYPE=Release
      addons: &gcc49
        apt:
          packages:
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

    - os: linux
      env: CC=gcc-5 CXX=g++-5 BUILD_TYPE=Debug
      addons: &gcc5
        apt:
          packages:
            - g++-5
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      env: CC=gcc-5 CXX=g++-5 BUILD_TYPE=Release
      addons: &gcc5
        apt:
          packages:
            - g++-5
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      env: CC=clang-3.8 CXX=clang++-3.8 BUILD_TYPE=Debug
      addons: &clang38
        apt:
          packages:
            - clang-3.8
          sources:
            - llvm-toolchain-trusty-3.8
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

    - os: linux
      env: CC=clang-3.8 CXX=clang++-3.8 BUILD_TYPE=Release
      addons: &clang38
        apt:
          packages:
            - clang-3.8
          sources:
            - llvm-toolchain-trusty-3.8
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

#    - os: linux
#      env: CC=clang-3.8 CXX=clang++-3.8 CXXFLAGS="-g -O1 -fsanitize=memory -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize-memory-track-origins=2"
#      addons: &clang38
#        apt:
#          packages:
#            - clang-3.8
#            - g++-5
#            - libstdc++-5-dev
#          sources:
#            - llvm-toolchain-trusty-3.8
#            - ubuntu-toolchain-r-test
#      install:
#        - sudo apt-get update -qq
#        - sudo apt-get install -qq g++-4.9

    - os: linux
      env: CC=clang-3.8 CXX=clang++-3.8 CXXFLAGS="-g -O1 -fsanitize=address -fno-omit-frame-pointer -fno-optimize-sibling-calls" ASAN_OPTIONS=check_initialization_order=1
      addons: &clang38
        apt:
          packages:
            - clang-3.8
          sources:
            - llvm-toolchain-trusty-3.8
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

    - os: linux
      env: CC=clang-3.8 CXX=clang++-3.8 CXXFLAGS="-g -O1 -fsanitize=undefined -fno-omit-frame-pointer -fno-optimize-sibling-calls"
      addons: &clang38
        apt:
          packages:
            - clang-3.8
          sources:
            - llvm-toolchain-trusty-3.8
            - ubuntu-toolchain-r-test
      install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq g++-4.9

before_install:
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -qq realpath; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then wget https://github.com/ned14/boost-release/archive/master.zip; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then unzip -q master.zip; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then export BOOST_ROOT="$(realpath boost-release-master)"; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then pushd "${BOOST_ROOT}"; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then chmod +x bootstrap.sh; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then ./bootstrap.sh --with-libraries=container,context,coroutine,date_time,filesystem,system; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then ./b2; fi
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then popd; fi
 - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; fi
 - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew upgrade cmake; fi
 - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew unlink boost; fi
 - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install boost --with-python; fi

script:
  - mkdir test/build && cd test/build
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cmake -DBoost_NO_SYSTEM_PATHS=ON -DBOOST_ROOT="${BOOST_ROOT}" -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..; fi
  - export CTEST_OUTPUT_ON_FAILURE=TRUE
  - travis_wait 45 make
  - ctest
