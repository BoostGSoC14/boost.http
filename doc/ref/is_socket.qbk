[section:is_socket is_socket]

 #include <boost/http/traits.hpp>

If `T` is an object fulfilling the [link reference.socket_concept [^Socket]
concept], this template inherits `std::true_type`. For any other type, this
template inherits `std::false_type`.

This template may be specialized for a user-defined type to indicate that the
type is eligible for operations involving [link reference.socket_concept
[^Socket] objects]. If your user-defined type already specializes [^[link
reference.is_server_socket is_server_socket]], there is no need to also
specialize this template, because this template will, by default, inherit
`std::true_type` if `is_server_socket<T>::value` evaluates to `true`.

[note In the future, when the client code is added, this trait will also detect
if `T` is a client socket.]

Initially, it was considered to create a trait that would automatically detect
if `T` is fullfilling the [link reference.socket_concept [^Socket] concept],
but the idea was abandoned, because the [link reference.socket_concept
[^Socket] concept] includes behaviour that can only be detected at runtime.

[section Template parameters]

[variablelist

[[`T`][The type to query.]]

]

[endsect]

[section See also]

* [link reference.socket_concept [^Socket] concept].
* [^[link reference.basic_socket basic_socket]].
* [^[link reference.socket socket]].

[endsect]

[endsect]
