[chapter Using
[quickbook 1.6]
]

[section Requirements]

This library is written in C++11 and requires a C++11 supporting compiler.

This library tries to reuse standard library components when possible, but this
is not always the case. `std::error_code`, for instance, cannot be transparently
replaced by `boost::system::error_code` within ASIO-using code.

The full list of dependencies is:

* CMake 3.1.0 or more recent[footnote for the build system]. It's going to be
  replaced later.
* Boost 1.57 or more recent.
  * algorithm, container, string_ref, ASIO, date_time and system[footnote Used
    in the core library.].
  * unit_test_framework[footnote For tests.].
  * context and coroutine[footnote For the examples and tests.].
  * filesystem[footnote For the `file_server`.].
  * Quickbook and boostbook[footnote For the documentation.].

[endsect]

[section Temporary requirements]

This library lives outside of the Boost tree and until it is accepted within the
Boost tree, it won't force the user to use a patched Boost tree to play with
this library. Til this date, the author was unable to make use of `Boost.Build`
without the use of the Boost tree. As such, we temporally use an alternative
build system.

The currently temporary used build system is CMake. As such, you need to install
CMake to compile this library.

[endsect]

[section Building]

Make sure you have Boost and CMake installed and with the PATH to its
executables set, then create a folder for the build and, from there, run:

[pre
$ cmake OPTIONS path_to_source_dir
$ make MAKEOPTIONS
]

=OPTIONS= can be null or have a combination of the following values:

* [^-DCMAKE_INSTALL_PREFIX=${INSTALLDIR}] sets the directory where to install
  this library.
* [^-DCMAKE_BUILD_TYPE=Debug].
* [^-DCMAKE_BUILD_TYPE=Release].
* [^-DCMAKE_BUILD_TYPE=RelWithDebInfo].
* [^-DCMAKE_BUILD_TYPE=MinSizeRel].
* [^-DBUILD_TESTS=NO] to disable the build of the tests.
* [^-DBUILD_EXAMPLES=NO] to disable the build of the examples.
* [^-DBUILD_SHARED_LIBS=YES] to build a shared library.

Options available under Windows:

* =-G"MinGW Makefiles"= to generate Makefiles for use with MinGW environment.
* =-G"Visual Studio 10"= to generate project files for Visual Studio 10.

=MAKEOPTIONS= can be null or have a combination of the following values:

* =install= installs this library.
* [^DESTDIR=${PKGDIR}] sets the directory where to install this library. This
  options should be used if you intend to package this library to set the
  package directory. To choose another installation directory, see options in
  OPTIONS, above.

[endsect]
